var editorArray=new Array();

var ua = navigator.userAgent.toLowerCase();

var isAndroid = ua.indexOf("android") > -1; //&& ua.indexOf("mobile");

var verIos = iOSversion();

var disableEditor;

//condition to check editor support for android and ios < 5.if disableEditor is set to 1 then editor will not load.



//if(isAndroid || verIos[0] < 5){
	if(verIos[0] < 5){

  //alert("test success");

  $('#editorChoiceMessage').show();

  $('#editorChoice').hide();

  disableEditor = 1;

  $('#config').hide();

}

else if(getCookie('disableEditor') == 1){

  disableEditor = 1;

}

else{

  disableEditor = 0;

}



$(document).ready(function(){

	editorCheck();

	

	//code to remove style info from system tagged content

	$('.autoNumberContainer').next().find(".red_systemTag , .yellow_systemTag ,.green_systemTag ,.blue_systemTag ,.gray_systemTag > *").removeClass();

	$('.autoNumberContainer').next().find(".red_systemTag , .yellow_systemTag ,.green_systemTag ,.blue_systemTag ,.gray_systemTag > *").attr('style',"");

	

	//function to trigger alerts before navigating if session has expired.

	/*$(window).bind("beforeunload",function(e){

		$.ajax({

		  type: 'POST',

		  url: baseUrl+"login_check/verifySession",

		  success: function(data){

				if(data==0 && document.URL.search("admin_logout")==-1 && $("[value='Login']").length==0){

					e.preventDefault();

				}

			},

		  async:false //to make unload event happen after ajax call

		});

	});*/
	
});



function editorCheck(){

	if(disableEditor==1){

		$('.editLeafMobile').hide();

		var url = document.URL;

/*		if(url.indexOf('task')!=-1){

			$('textarea').live(function(){alert($(this).attr('name'));$(this).hide();});

		}

		else{

			$('.editDocumentOption').hide();

		}*/

	}

}





//function to determine iOS version to disable ckeditor- Monika

function iOSversion(){

  if (/iP(hone|od|ad)/.test(navigator.platform)) {

    // supports iOS 2.0 and later: <http://bit.ly/TJjs1V>

    var v = (navigator.appVersion).match(/OS (\d+)_(\d+)_?(\d+)?/);

    return [parseInt(v[1], 10), parseInt(v[2], 10), parseInt(v[3] || 0, 10)];

  }

  else{

  	return 0;

  }

}

 
//Manoj: code to change textarea to editor start

function chnage_textarea_to_editor(textareaId,version)
{
	if(version=='simple')
	{
		$('#'+textareaId).froalaEditor({
								   
		  toolbarButtons: ['bold', 'italic', 'underline', 'insertImage', 'insertVideo'],
	 
	 	  height: 200,
		  
		  imageUploadURL: baseUrl+'froala_editor/upload.php',

		  videoUploadURL: baseUrl+'froala_editor/upload.php',

		  fileUploadURL:  baseUrl+'froala_editor/upload.php',

		  toolbarButtonsXS: ['insertImage', 'insertVideo', 'bold', 'italic', 'underline'],
		  
		  toolbarButtonsSM: ['bold', 'italic', 'underline', 'insertImage', 'insertVideo'],
		  
		  
    	});
	}
	else if(version=='talk')
	{
		$('#'+textareaId).froalaEditor({
								   
		  toolbarButtons: ['bold', 'italic', 'underline', 'insertImage', 'insertVideo'],
	 
	 	  height: 110,
		  
		  imageUploadURL: baseUrl+'froala_editor/upload.php',

		  videoUploadURL: baseUrl+'froala_editor/upload.php',

		  fileUploadURL:  baseUrl+'froala_editor/upload.php',

		  toolbarButtonsXS: ['insertImage', 'insertVideo', 'bold', 'italic', 'underline'],
		  
		  toolbarButtonsSM: ['bold', 'italic', 'underline', 'insertImage', 'insertVideo'],
		  
		  
    	});
	}
	else
	{
	
	$('#'+textareaId).froalaEditor({
								   
		  toolbarButtons: ['bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', 'fontFamily', 'fontSize', '|', 'specialCharacters', 'color', 'emoticons', 'inlineStyle', 'paragraphStyle', '|', 'paragraphFormat', 'align', 'formatOL', 'formatUL', 'outdent', 'indent', 'quote', 'insertHR', 'insertLink', 'insertImage', 'insertVideo', 'insertFile', 'insertTable', '|', 'undo', 'redo', 'clearFormatting', 'selectAll', 'html', 'applyFormat', 'removeFormat', 'fullscreen', 'print', 'help', '-'],
	 
	 	  height: 200,
		  
		  imageUploadURL: baseUrl+'froala_editor/upload.php',

		  videoUploadURL: baseUrl+'froala_editor/upload.php',

		  fileUploadURL:  baseUrl+'froala_editor/upload.php',

		  toolbarButtonsXS: ['insertImage', 'insertVideo', 'insertFile', 'bold', 'italic', 'underline'],
		  
		  toolbarButtonsSM: ['bold', 'italic', 'underline', 'strikeThrough', 'fontSize', '|', 'color', 'emoticons', '|', 'align', 'formatOL', 'formatUL', 'outdent', 'indent', 'quote', 'insertHR', 'insertLink', 'insertImage', 'insertVideo', 'insertFile', 'insertTable', '|', 'undo', 'redo', 'clearFormatting', 'selectAll', 'html', 'applyFormat', 'removeFormat', 'fullscreen'],
		  
		  
    });
	}
}

//Manoj: code to change textarea to editor end


//function chnage_textarea_to_editor(textareaId,version)
//
//{
//	//alert (textareaId);
//	//alert(getCookie('disableEditor'));//do not load editor if android or ios<5 detected
//
//	version = typeof version !== 'undefined' ? version : "";
//	//alert ('disable= ' +disableEditor);
//
//	if(disableEditor==0)
//	{
//			//Manoj: Multiple loader issue removed
//			CKEDITOR.on('instanceCreated', function(e){ $("#loading_editor").remove(); $("#" + textareaId).before("<div id='loading_editor' style='margin:15px 0px;'><br><img src='"+baseUrl+"/images/ajax-loader-add.gif'><br></div>"); }); 
//
//			if(version=='simple'){
//				
//			
//			CKEDITOR.replace(textareaId,
//
//				{
//					"uploadUrl": baseUrl+"ckeditor/plugins/imgupload/imgupload.php?black=mass",	
//					
//					language: 'en',
//
//					fullPage : false,
//
//					toolbar  : [{ name: 'basicstyles', items : [ 'Bold','Italic','Underline','Scayt' ] },
//																
//								{ name: 'insert', items : [ 'Image','oembed'] },
//									
//								{ name: 'clipboard', items : [ 'PasteText' ] }]					
//
//				});		
//			}
//
//			else{
//
//			var ismobile = (/iphone|ipod|android|blackberry|opera|mini|windows\sce|palm|smartphone|iemobile/i.test(navigator.userAgent.toLowerCase()));
//
//			var istablet = (/ipad|android 4.1|xoom|sch-i800|playbook|tablet|kindle/i.test(navigator.userAgent.toLowerCase()));
//			
//			
//			//Manoj: added condition for iphone issue
//			
//			/*if(ismobile==true && istablet==true)
//
//			{
//
//				CKEDITOR.replace(textareaId,
//
//							{
//							
//							   "uploadUrl": baseUrl+"ckeditor/plugins/imgupload/imgupload.php?black=mass",	
//							   language: 'en',
//
//							   fullPage : false,
//								//Manoj: change spellchecker to scayt
//							   toolbar : [ { name: 'basicstyles', items : [ 'Bold','Italic','Underline','Scayt' ] },
//																		   
//									{ name: 'clipboard1', items : [ 'Undo','Redo']},
//
//									{ name: 'clipboard', items : [ 'Cut','Copy','Paste','PasteText','PasteFromWord' ] },
//
//									//{ name: 'basicstyles1', items : ['Strike', 'Subscript','Superscript']},
//
//									//{ name: 'editing', items : [ 'Find','Replace','SelectAll' ] },
//
//									//{ name: 'paragraph', items : ['NumberedList','BulletedList','Outdent','Indent' ] },
//									
//									{ name: 'paragraph', items : ['BulletedList' ] },
//
//									{ name: 'insert', items : [ 'Image'] },
//
//									//{ name: 'paragraph1', items : ['Blockquote','JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock'] },
//
//									//{ name: 'links', items : [ 'Link','Unlink','Anchor' ] },
//
//									//{ name: 'insert', items : [ 'Image','Table','SpecialChar' ] },
//
//									//{ name: 'colors', items : [ 'TextColor','BGColor' ] },
//
//									//{ name: 'styles', items : [ 'Format','Font','FontSize' ] },
//
//									{ name: 'tools', items : [ 'Maximize' ] }]
//
//						            
//
//							});
//							
//
//			}*/
//			
//			//Detect safari browser 
//			
//			if(navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1 && (ismobile==true))
//			{			
//				
//				CKEDITOR.replace(textareaId,
//
//							{
//								
//							   "uploadUrl": baseUrl+"ckeditor/plugins/imgupload/imgupload.php?black=mass",
//							  
//							   language: 'en',
//			
//							   fullPage : false,
//
//							   toolbar : [ { name: 'basicstyles', items : [ 'Bold','Italic','Underline','SpellChecker' ] },
//
//									//{ name: 'clipboard', items : [ 'Cut','Copy','Paste' ] },
//
//									//{ name: 'clipboard1', items : [ 'Undo','Redo']},
//
//									//{ name: 'basicstyles1', items : ['Strike', 'Subscript','Superscript']},
//
//									//{ name: 'editing', items : [ 'RemoveFormat','Find','Replace','SelectAll' ] },
//
//									{ name: 'paragraph', items : ['BulletedList' ] },
//
//									{ name: 'insert', items : [ 'Image'] },
//
//									//{ name: 'paragraph1', items : ['Blockquote','JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock'] },
//
//									//{ name: 'links', items : [ 'Link','Unlink','Anchor' ] },
//
//									//{ name: 'insert', items : [ 'Image','Table','SpecialChar' ] },
//
//									//{ name: 'colors', items : [ 'TextColor','BGColor' ] },
//
//									//{ name: 'styles', items : [ 'Format','Font','FontSize' ] },
//
//									{ name: 'tools', items : [ 'Maximize' ] }]
//
//						            
//
//							});
//			}
//			
//			//Manoj: code end
//
//			else if(ismobile==true)
//
//			{
//				
//				CKEDITOR.replace(textareaId,
//
//							{
//								
//							   "uploadUrl": baseUrl+"ckeditor/plugins/imgupload/imgupload.php?black=mass",
//							   
//							   language: 'en',
//			
//							   fullPage : false,
//
//							   toolbar : [ { name: 'basicstyles', items : [ 'Bold','Italic','Underline','SpellChecker' ] },
//
//									//{ name: 'clipboard', items : [ 'Cut','Copy','Paste' ] },
//
//									//{ name: 'clipboard1', items : [ 'Undo','Redo']},
//
//									//{ name: 'basicstyles1', items : ['Strike', 'Subscript','Superscript']},
//
//									//{ name: 'editing', items : [ 'RemoveFormat','Find','Replace','SelectAll' ] },
//
//									{ name: 'paragraph', items : ['BulletedList' ] },
//
//									{ name: 'insert', items : [ 'Image'] },
//
//									//{ name: 'paragraph1', items : ['Blockquote','JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock'] },
//
//									//{ name: 'links', items : [ 'Link','Unlink','Anchor' ] },
//
//									//{ name: 'insert', items : [ 'Image','Table','SpecialChar' ] },
//
//									//{ name: 'colors', items : [ 'TextColor','BGColor' ] },
//
//									//{ name: 'styles', items : [ 'Format','Font','FontSize' ] },
//
//									{ name: 'tools', items : [ 'Maximize' ] }]
//
//						            
//
//							});
//
//			}
//
//			else if(istablet==true)
//
//			{
//				
//				CKEDITOR.replace(textareaId,
//
//							{
//								
//							   "uploadUrl": baseUrl+"ckeditor/plugins/imgupload/imgupload.php?black=mass",	
//							   language: 'en',
//
//							   fullPage : false,
//
//							   toolbar : [ { name: 'basicstyles', items : [ 'Bold','Italic','Underline','SpellChecker' ] },
//
//									{ name: 'clipboard', items : [ 'Cut','Copy','Paste','PasteText','PasteFromWord' ] },
//
//									{ name: 'clipboard1', items : [ 'Undo','Redo']},
//
//									{ name: 'basicstyles1', items : ['Strike', 'Subscript','Superscript']},
//
//									{ name: 'editing', items : [ 'Find','Replace','SelectAll' ] },
//
//									{ name: 'paragraph', items : ['NumberedList','BulletedList','Outdent','Indent' ] },
//
//									{ name: 'insert', items : [ 'Image'] },
//
//									//{ name: 'paragraph1', items : ['Blockquote','JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock'] },
//
//									//{ name: 'links', items : [ 'Link','Unlink','Anchor' ] },
//
//									//{ name: 'insert', items : [ 'Image','Table','SpecialChar' ] },
//
//									//{ name: 'colors', items : [ 'TextColor','BGColor' ] },
//
//									//{ name: 'styles', items : [ 'Format','Font','FontSize' ] },
//
//									{ name: 'tools', items : [ 'Maximize' ] }]
//
//						            
//
//							});
//
//			}
//
//			else if(ismobile==false && istablet==false)
//
//			{
//				/*CKEDITOR.replace( textareaId, {
//    "filebrowserImageUploadUrl": baseUrl+"ckeditor/plugins/imgupload/imgupload.php"
//				});*/
//				//$("#loader_editor").html("<div style='margin:15px 0px;'><br><img src='"+baseUrl+"/images/ajax-loader-add.gif'><br></div>");
//				//$("#loader_editor").show();
//				//CKEDITOR.on('instanceCreated', function(e){ $("#" + textareaId).before("<div id='loading_editor' style='margin:15px 0px;'><br><img src='"+baseUrl+"/images/ajax-loader-add.gif'><br></div>"); });   
//				CKEDITOR.replace(textareaId,
//
//							{
//								// "filebrowserImageUploadUrl": baseUrl+"ckeditor/plugins/imgupload/imgupload.php",
//								"uploadUrl": baseUrl+"ckeditor/plugins/imgupload/imgupload.php?black=mass",
//								language: 'en',
//
//							   fullPage : false,
//							   
//							   width: '80%',
//			   
//
//							   toolbar : [ { name: 'basicstyles', items : [ 'Bold','Italic','Underline','Scayt' ] },
//
//									{ name: 'clipboard', items : [ 'Cut','Copy','Paste','PasteText','PasteFromWord' ] },
//
//									{ name: 'clipboard1', items : [ 'Undo','Redo']},
//
//									{ name: 'basicstyles1', items : ['Strike', 'Subscript','Superscript']},
//
//									{ name: 'editing', items : [ 'RemoveFormat','Find','Replace','SelectAll' ] },
//
//									{ name: 'paragraph', items : ['NumberedList','BulletedList','Outdent','Indent' ] },
//
//									{ name: 'paragraph1', items : ['JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock'] },
//
//									{ name: 'links', items : [ 'Link','Unlink'] },
//
//									{ name: 'insert', items : [ 'Image','oembed'] },
//									
//									{ name: 'colors', items : [ 'TextColor','BGColor'] },
//
//									{ name: 'tools', items : [ 'Maximize' ] }]
//							});
//
////CKEDITOR.replace( textareaId );
//				
//
//
//			}
//
//			}
//
//
//			CKEDITOR.on('instanceReady', function(e){ $("#loading_editor").remove();});    
//
//		
//	}
//
//}



//for closing editor if instance exists

function editorClose(editorName){
	
	//if(disableEditor==0 && CKEDITOR.instances[editorName])
	
	var editor_content = $('#'+editorName).data('froala.editor');
	if(disableEditor==0 && editor_content)

	{
		//alert ('before destroy');
		//CKEDITOR.instances[editorName].destroy(true);
		//Manoj: code for destroy froala editor instance
		$('#'+editorName).froalaEditor('destroy');
		//Manoj: code end
		//alert ('after destroy');
/*		if (CKEDITOR.instances['text']) {
        CKEDITOR.remove(CKEDITOR.instances['text']);
		}
		CKEDITOR.replace('text');
*/
	}

}



// this function sets cookies using javascript

function setCookie(c_name,value,expiredays)

{

var exdate=new Date();

exdate.setDate(exdate.getDate()+expiredays);

document.cookie=c_name+ "=" +escape(value)+

((expiredays==null) ? "" : ";expires="+exdate.toUTCString());

}



function getCookie(c_name)

{

	if (document.cookie.length>0)

	{

		c_start=document.cookie.indexOf(c_name + "=");

		

		if (c_start!=-1)

		{

			c_start=c_start + c_name.length+1;

			c_end=document.cookie.indexOf(";",c_start);

			if (c_end==-1) c_end=document.cookie.length;

			if(c_name=='disableEditor'){

				return document.cookie.substring(c_start,c_end);

			}

			//alert(unescape(document.cookie.substring(c_start,c_end)));

			return unescape(document.cookie.substring(c_start,c_end));

		}

	}

	return "";

}

// function to set value into editor

function setValueIntoEditor(editorId,data)
{ 
	if(disableEditor==0){
		//CKEDITOR.instances[editorId].setData(data);
	}

	else{

		document.getElementById(editorId).value=data;

	}

}

function getvaluefromEditor(editorId){

	//condition to disable editor functions for android and ios<5
	if(disableEditor==0){

		

		//var INSTANCE_NAME = $("#"+editorId).attr('name');

		//var htmlVal = CKEDITOR.instances[INSTANCE_NAME].getData();
		
		//Manoj: code for getting froala html data 

		var htmlVal = $('#'+editorId).froalaEditor('html.get');
		//alert(htmlVal);
		//Manoj: code end
		

		if(htmlVal!=''){

		//	$('#cke_'+INSTANCE_NAME).hide();

		//	CKEDITOR.instances[INSTANCE_NAME].destroy();

		}

		return htmlVal;

	}

	else

	{

		//for android or ios < 5 return value from textarea

		return '<p>'+document.getElementById(editorId).value+'</p>';	

	}

}

function GetXmlHttpObject2()

{

  var xmlhttp3;

  if (window.XMLHttpRequest)

  {

  // code for IE7+, Firefox, Chrome, Opera, Safari

  xmlhttp3=new XMLHttpRequest();

  return xmlhttp3;

  }

	else if (window.ActiveXObject)

  {

  // code for IE6, IE5

  xmlhttp3=new ActiveXObject("Microsoft.XMLHTTP");

  return xmlhttp3;

  }

	else

  {

  jAlert("Your browser does not support XMLHTTP!","Alert");

  return null;

  }

  

}



function editor_code(val,ename,pId){ 



	if(document.getElementById(ename)){

		

	}else{

		var newInput = document.createElement('textarea');

		var inputName = ename;

		newInput.setAttribute('name',inputName);

		newInput.setAttribute('id',inputName);

		newInput.setAttribute('rows','10');

		newInput.setAttribute('cols','90');

		newInput.value=val; 

		document.getElementById(pId).appendChild(newInput);

		var newInput1 = document.createElement('span');

		inputName1=inputName+'sp';

		newInput1.setAttribute('id',inputName1);

		

		document.getElementById(pId).appendChild(newInput1);

	}

}



function hideShowSeed(treeId) 

{

	var seedId = 'normalViewTree'+treeId;			

	if(document.getElementById(seedId).style.display == "none")

	{

		document.getElementById(seedId).style.display="";

	}

	else

	{

		document.getElementById(seedId).style.display="none";

	}

}





function addFirstLeaf(treeId, leafOrder, version)

{  

    /*Added by Surbhi IV for checking version */

    var request = $.ajax({

				  url: baseUrl+'lock_leaf/checkTreeLatestVersion/'+treeId,

				  type: "POST",

				 // data: 'treeId='+treeId+'&version='+version,

				  data: '',

				  dataType: "html",

				  success:function(result)

				  { 

					   if(result > 0)

					   {/*End of Added by Surbhi IV for checking version */

					        if(document.getElementById('editStatus').value == 1)

	{

		jAlert('Please save or close the current leaf before accessing another leaf','Alert');

		return false;

	}

	document.getElementById('editStatus').value = 1;

	//hideall();

	//document.getElementById('leafAddFirst').style.display="";
	//document.getElementById('docfirstLeaf').style.display="";
	$('#leafAddFirst').show();
	$('#docfirstLeaf').show();

	

	if( document.getElementById("leafAddFirst"))

	{

	  var objleafAddFirst = document.getElementById("leafAddFirst");



				  while (objleafAddFirst.hasChildNodes()) {

								objleafAddFirst.removeChild(objleafAddFirst.lastChild);

							}

	}

	

	

	editor_code('','editorLeafContentsAddFirst1','leafAddFirst');

	
	
	//hideall();
	const recordVal = "'doc'";

	// document.getElementById('editorLeafContentsAddFirst1'+'sp').innerHTML='<table width="8%" border="0" align="left" cellpadding="4" cellspacing="0"><tr><td colspan="2" align="left"><a href="#" onclick="firstLeafSaveNew('+treeId+','+leafOrder+')"><div id="loader"></div><input type="button" class="button01" value="Done" /></a><a href="javascript:void(0)" onclick="cancelFirstLeaf('+treeId+','+leafOrder+')"><input type="button" class="button01" value="Cancel" ></a></td></tr></table><div id="audioRecordBox"><div style="float:left;margin-top:0.7%"><span id="drop" style="margin-left:5px;"><a title="Record an audio" style="margin-left:0%; cursor:pointer;" onClick="startAudioRecord(1,'+leafOrder+');"><span class="fa fa-microphone"></span></a></span></div><div id="1audio_record'+leafOrder+'" style="display:none; margin-left:1%; margin-top:5px; float:left;"><input onClick="startRecording(this,'+recordVal+');" type="button"  class="button01" value="Record"   /><input onClick="stopRecording(this);" type="button"  class="button01" value="Stop" disabled  /></div></div>';
	
	 document.getElementById('editorLeafContentsAddFirst1'+'sp').innerHTML='<div><a href="#" onclick="firstLeafSaveNew('+treeId+','+leafOrder+')"><div id="loader"></div><input style="float:left;" type="button" class="button01" value="Done" /></a><a href="javascript:void(0)" onclick="cancelFirstLeaf('+treeId+','+leafOrder+')"><input style="float:left;" type="button" class="button01" value="Cancel" ></a><span id="audioRecordBox"><div style="float:left;margin-top:5px"><span id="drop" style="margin-left:5px;"><a title="Record an audio" style="margin-left:0%; cursor:pointer;" onClick="startAudioRecord(1,'+leafOrder+');"><span class="fa fa-microphone"></span></a></span></div><div id="1audio_record'+leafOrder+'" style="display:none; margin-left:1%; margin-top:0px; float:left;"><input onClick="startRecording(this,'+recordVal+');" type="button"  class="button01" value="Record"   /><input onClick="stopRecording(this);" type="button"  class="button01" value="Stop" disabled  /></div></span></div>';
	
	//Manoj: remove version simple
	chnage_textarea_to_editor('editorLeafContentsAddFirst1','');

	

	// tinyMCE.execCommand('mceFocus',false,'editorLeafContentsAddFirst1');

					 

					   /*Added by Surbhi IV*/

					   }

					   else

					   {

						   jAlert("Leaf can not be added because new version of this tree has been created.","Alert");

						   return false;

					   }

				  }

		});/*End of Added by Surbhi IV*/

}



function firstLeafSave(treeId, leafOrder) 

{		

	var editorId 	= "editorLeafContentsAddFirst1";

	var getvalue	= getvaluefromEditor(editorId);

	

		if (getvalue=='')

		{

			jAlert ('Please enter text','Alert');

			return false;

		}

	 

	document.frmEditLeaf.curLeaf.value 		= leafOrder;	

	document.frmEditLeaf.curContent.value 	= getvalue;

	document.frmEditLeaf.curLeafOrder.value = leafOrder;

	document.frmEditLeaf.curOption.value 	= 'addFirst';			

	document.frmEditLeaf.submit();

	return true;		

}



function firstLeafSaveNew(treeId, leafOrder) 

{		

	var editorId 	= 'editorLeafContentsAddFirst1';

	var getvalue	= getvaluefromEditor(editorId);

	if (getvalue=='')

		{
			//for mobile device remove jAlert
			jAlert ('Please enter text','Alert');

			return false;

		}

		

		$("[value=Done]").hide();

		$("[value=Cancel]").hide();

		$("#loader").html("<div style='margin:15px 0px;'><br><img src='"+baseUrl+"/images/ajax-loader-add.gif'><br></div>");

		 var data_user =$("#form10").serialize();

			

		 data_user=  data_user+'&curLeaf='+leafOrder+'&curContent='+encodeURIComponent(getvalue)+'&curLeafOrder='+leafOrder+'&frmEditLeaf=addFirst&editorname1=curContent&predecessor=0&successors=0&curOption=addFirst&workSpaceId='+workSpaceId+"&workSpaceType="+workSpaceType ; 

		

			  var request = $.ajax({

			  url: baseUrl+"edit_leaf_save/index/doc/exit",

			  type: "POST",

			  data: data_user,

			  dataType: "html",

			  success:function(result){

				



			  $("[value=Done]").show();

			  $("[value=Cancel]").show();

			  //alert(result);

			  $("#leafAddFirst").hide();

			   
 			  $("#docfirstLeaf").hide();
			 

			  $("#datacontainer").html(result);

			   

			  editorCheck();

			  var editorId 	= 'editorLeafContentsAddFirst1';

			  

			  editorClose(editorId);



			  							}

			});

}

// this is a js function used to cancel to add the first leaf 

function cancelFirstLeaf( treeId, leafOrder) 

{

	editorClose("editorLeafContentsAddFirst1");//alert("asdsad");

	document.getElementById('leafAddFirst').style.display="none";	

	document.getElementById('editStatus').value = 0;	
	
	document.getElementById('docfirstLeaf').style.display="none";
	 
}	

function addLeaf_old(leafId,treeId, leafOrder){ 

	if(0)

	{

		jAlert('Please save or close the current leaf before accessing another leaf','Alert');

		return false;

	}

	document.getElementById('addleaf'+leafOrder).style.display="";

	editor_code('','editorLeafContentsAdd'+leafOrder+'1','addleaf'+leafOrder);

	hideall();

	

		

	

	document.getElementById('editorLeafContentsAdd'+leafOrder+'1sp').innerHTML='<div style="width:8%; float:left; padding:10px;"><form id="form2" name="form2" method="post"  ><a href="javaScript:void(0)" onclick="newLeafSave('+leafId+','+treeId+','+leafOrder+',1,2)"><img src="'+baseUrl+'images/done-btn.jpg" border="0"></a> <a href="javascript:void(0)" onclick="cancelnewLeaf('+leafId+','+treeId+','+leafOrder+',1)"><img src="'+baseUrl+'images/btn-cancel.jpg" border="0"></a></form></div>';

	



	chnage_textarea_to_editor('editorLeafContentsAdd'+leafOrder+'1');

	setValueIntoEditor('editorLeafContentsAdd'+leafOrder+'1','');	

}



function addLeafNew(leafId,treeId, leafOrder, version)

{ 

    var request = $.ajax({

				  url: baseUrl+'lock_leaf/checkTreeLatestVersion/'+treeId,

				  type: "POST",

				  data: '',

				  dataType: "html",

				  success:function(result)

				  {

					   if(result>0)

					   {

						    /*End of Added by Surbhi IV for checking version */

					        if(document.getElementById('editStatus').value == 1)

	{

		jAlert('Please save or close the current leaf before accessing another leaf','Alert');

		return false;

	}

	

	document.getElementById('editStatus').value = 1;

 	document.getElementById('addleaf'+leafOrder).style.display="";

	if( document.getElementById('addleaf'+leafOrder))

	{

	  var objEditleaf = document.getElementById('addleaf'+leafOrder);



	  while (objEditleaf.hasChildNodes()) {

			objEditleaf.removeChild(objEditleaf.lastChild);

		}

	}

	

	

	var editorLeafContentsAddleafOrder1='editorLeafContentsAdd'+leafOrder+'1';

	editor_code('','editorLeafContentsAdd'+leafOrder+'1','addleaf'+leafOrder);

	const recordVal = "'doc'";
	
	//document.getElementById('editorLeafContentsAdd'+leafOrder+'1sp').innerHTML='<div style="width:9%; float:left; padding:10px 0px;"><a href="javaScript:void(0)" onclick="newLeafSave('+leafId+','+treeId+','+leafOrder+',1,2)"><input type="button" class="button01" value="Done" ></a> <a href="javascript:void(0)" onclick="cancelnewLeaf('+leafId+','+treeId+','+leafOrder+',1)"><input type="button" class="button01" value="Cancel" ></a></div><div id="audioRecordBox"><div style="float:left;margin-top:1%; margin-left:0%;"><span id="drop"><a title="Record an audio" style="margin-left:0%;" onClick="startAudioRecord(2,'+leafOrder+');"><span class="fa fa-microphone"></span></a></span></div><div id="2audio_record'+leafOrder+'" style="display:none; margin-left:1%; margin-top:10px; float:left;"><button onClick="startRecording(this,'+recordVal+');">Record</button><button onClick="stopRecording(this);" disabled>Stop</button></div></div>';
	
	document.getElementById('editorLeafContentsAdd'+leafOrder+'1sp').innerHTML='<div"><a href="javaScript:void(0)" onclick="newLeafSave('+leafId+','+treeId+','+leafOrder+',1,2)"><input style="float:left;" type="button" class="button01" value="Done" ></a> <a href="javascript:void(0)" onclick="cancelnewLeaf('+leafId+','+treeId+','+leafOrder+',1)"><input style="float:left;" type="button" class="button01" value="Cancel" ></a><span id="audioRecordBox"><div style="float:left;margin-top:5px; margin-left:1%;"><span id="drop"><a title="Record an audio" style="margin-left:0%;" onClick="startAudioRecord(2,'+leafOrder+');"><span class="fa fa-microphone"></span></a></span></div><div id="2audio_record'+leafOrder+'" style="display:none; margin-left:1%; margin-top:0px; float:left;"><button onClick="startRecording(this,'+recordVal+');">Record</button><button onClick="stopRecording(this);" disabled>Stop</button></div></span></div>';

	


	//Manoj: remove version simple
	
	chnage_textarea_to_editor('editorLeafContentsAdd'+leafOrder+'1','');

	
	

				/*Added by Surbhi IV*/

					   }

					   else

					   {

						   jAlert("Leaf can not be added because new version of this tree has been created.","Alert");

							return false;

					   }

				  }

	});

	

}

function cancelnewLeaf( leafId,treeId, leafOrder) 

{

	

	var editorLeafContentsAddleafOrder1='editorLeafContentsAdd'+leafOrder+'1';

	var INSTANCE_NAME = $("#editorLeafContentsAdd"+leafOrder+"1").attr('name');

	

	

	editorClose(INSTANCE_NAME);

	

	document.getElementById('addleaf'+leafOrder).style.display="none";	

	 document.getElementById('editStatus').value = 0;		

}

var leafId1;

var leafOrder1;

var treeId1;

var nodeId1;

var xmlHttp;

var xmlHttp4;

var xmlHttpTree;

function newLeafSave(leafId, treeId,leafOrder) 

{	

	var editorId = "editorLeafContentsAdd"+leafOrder+"1";

	

	var getvalue=getvaluefromEditor(editorId);
	//alert (getvalue);
	//return false;
	

	if ($("<p>"+getvalue+"</p>").text().trim()=='' && getvalue.indexOf("<img")==-1){

		jAlert('Please enter text','Alert');

		return false;

	}

	//position: absolute; right: 0px; left: 0px; margin: 0px auto; top: 0px; bottom: 0px; width: 100%; z-index: 1000;

	document.getElementById('editorLeafContentsAdd'+leafOrder+'1sp').innerHTML ="<div id='overlay' style='margin:15px 0px;'><br><img src='"+baseUrl+"/images/ajax-loader-add.gif'><br></div>";

	leafId1=leafId;

	leafOrder1=leafOrder;



	var xmlHttpTree=GetXmlHttpObject2();

	

	var url = baseUrl+'lock_leaf/checkTreeLatestVersion/'+treeId;

	$.get(url,{},function(data){handleTreeVersion1(getvalue,data,editorId);});

	

}


function handleTreeStateChange2(treeId,version) 

{				
	  var request = $.ajax({

	  url: baseUrl+"comman/checkVersion",

	  type: "POST",

	  data: 'treeId='+treeId+'&version='+version,

	  dataType: "html",

	  success:function(result)

	  {
			
		   if(result)

		   {

				var strPos1=$('#updateImage').attr('onClick').indexOf('&treeId=');

				var str1=$('#updateImage').attr('onClick').slice(0,strPos1+8);

				var strPos2=$('#updateImage').attr('onClick').indexOf('&doc=');

				var str2=$('#updateImage').attr('onClick').slice(strPos2);

				if(strPos2>-1)

				{

					$('#updateImage').attr('onClick',str1+''+result+''+str2);

				}

				$('#updateImage').attr('src',baseUrl+'images/tab-icon/update-view-green.png');

		   }

		   else

		   {

				$('#updateImage').attr('src',baseUrl+'images/tab-icon/update-view-green.png');

		   }

	  }

	});

	

}


function checktreeUpdateCount(treeId,workSpaceId,workSpaceType,talk,version){
	if (talk == 1)
	{
		var url = baseUrl+'view_document/checkTreeUpdateCountNew/'+treeId+'/'+workSpaceId+'/'+workSpaceType+'/1';	
	}
	else
	{
		var url = baseUrl+'view_document/checkTreeUpdateCountNew/'+treeId+'/'+workSpaceId+'/'+workSpaceType+'/0';	  
	}

	xmlHttp4=GetXmlHttpObject2();

	xmlHttp4.onreadystatechange =function () 
	 {
		//alert (xmlHttp4.responseText);
		 if (xmlHttp4.readyState==4 && xmlHttp4.status == 200)
		 { 
			 if(xmlHttp4.responseText==1)
			 {
				//alert ('here');
				 handleTreeStateChange2(treeId,version);
			 }
		 }
	 };

	 xmlHttp4.open("GET", url, true);

	 xmlHttp4.send(null);
}
function checkTotalTreeCount(workSpaceId,workSpaceType){

	var url = baseUrl+'dashboard/checkTotalTreeCount/'+workSpaceId+'/'+workSpaceType;	  

	xmlHttp4=GetXmlHttpObject2();
	
	xmlHttp4.onreadystatechange =function () 
	 {
		//alert (xmlHttp4.responseText);
		 if (xmlHttp4.readyState==4 && xmlHttp4.status == 200)
		 { 
			 if(xmlHttp4.responseText==1)
			 {
				$('#updateImage').attr('src',baseUrl+'images/tab-icon/update-view-green.png');
				//$('#updateImage').attr('src',baseUrl+'images/tab-icon/update-view-green.png');
			 }
		 }
	 };

	 xmlHttp4.open("GET", url, true);
	 xmlHttp4.send(null);
}



function docTitleSave()

{

	  

	var getvalue = getvaluefromEditor('documentName');

	

	if(getvalue == "")

	{

		jAlert("Please enter the document title","Alert");

		document.getElementById('documentName').focus();

		return false;

	}



	document.frmDocument.submit();

	return true;	

}

function getHTTPObjectm() 

{ 

	var xmlhttp; 

	if(window.XMLHttpRequest){ 

		xmlhttp = new XMLHttpRequest(); 

	}else if(window.ActiveXObject){ 

		xmlhttp=new ActiveXObject("Microsoft.XMLHTTP"); 

		if(!xmlhttp){ 

			xmlhttp=new ActiveXObject("Msxml2.XMLHTTP"); 

		} 

	} 

	return xmlhttp; 

} 

function docTitleSaveNew (version,treeId)

{

	//var getvalue = getvaluefromEditor('documentName');
	var getvalue = document.getElementById('documentName').value;

	var treeId = document.getElementById('treeId').value;



	if($("<p>"+getvalue+"</p>").text().trim()=='')

	{

		jAlert("Please enter the title","Alert");

		document.getElementById('documentName').focus();

		return false;

	}

	else if(getvalue.indexOf("<img")!=-1)

	{

		jAlert("Please do not use images in title","Alert");

		document.getElementById('documentName').focus();

		return false;

	}

	

	$("[value=Done]").hide();

	$("[value=Cancel]").hide();

	$("#loader").html("<div style='margin:15px 0px;'><br><img src='"+baseUrl+"/images/ajax-loader-add.gif'><br></div>");



	var httpDoc = getHTTPObjectm();

	



	var documentName='documentName';

	var jsData = getvalue;



	urlm=baseUrl+'edit_document/updateNew/'+workSpaceId+'/type/'+workSpaceType+'/notes';

	data='treeId='+treeId+'&documentName='+encodeURIComponent(jsData);

   

	httpDoc.open("POST", urlm, true); 

	httpDoc.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

	httpDoc.onreadystatechange = function()

				  {

					  if (httpDoc.readyState==4 && httpDoc.status==200)

					  {

							

							document.getElementById("treeContent").innerHTML=getvalue;

							if(document.getElementById("oldNameContainer"))

							{

							document.getElementById("oldNameContainer").innerHTML=httpDoc.responseText;

							

							

							}

							//editorClose(documentName);

							$("[value=Done]").show();

							$("[value=Cancel]").show();

							$("#loader").html("");

						document.getElementById("edit_doc").style.display='none';

						

					  }

				  }   

	httpDoc.send(data);

}



function docTitleCancel ()

{

	//editorClose('documentName');

	

	if( document.getElementById("divEditDoc"))

	{

	  var objleafAddFirst = document.getElementById("divEditDoc");



				  while (objleafAddFirst.hasChildNodes()) {

								objleafAddFirst.removeChild(objleafAddFirst.lastChild);

							}

	}

	

	document.getElementById('edit_doc').style.display='none';

	

	return false;

}

function docTitleCancel_1(content)
{

	   
	editorClose('documentName');

	

	if( document.getElementById("divEditDoc"))

	{

	  var objleafAddFirst = document.getElementById("divEditDoc");



				  while (objleafAddFirst.hasChildNodes()) {

								objleafAddFirst.removeChild(objleafAddFirst.lastChild);

							}

	}

		

	document.getElementById('edit_doc').style.display='none';

	return false;

}





function editLeaf(leafId, leafOrder,treeId,nodeId,version) 

{

	var request = $.ajax({

				  url: baseUrl+'lock_leaf/checkTreeLatestVersion/'+treeId,

				  type: "POST",

				  data: '',

				  dataType: "html",

				  success:function(result)

				  {
					   if(result>0)

					   {

						   /*End of Added by Surbhi IV for checking version */

					       if(document.getElementById('editStatus').value == 1)

							{

								jAlert('Please save or close the current leaf before accessing another leaf','Alert');

								return false;

							}

							else

							{

								document.getElementById('editStatus').value = 1;	

								 leafId1=leafId;

								 leafId2=leafId;

								 leafOrder1=leafOrder;

								 treeId1=treeId;

								 nodeId1=nodeId;

								

								initialleafcontentId='initialleafcontent'+leafOrder1;

						

								xmlHttpTree=GetXmlHttpObject2();

								var url =baseUrl+'lock_leaf/checkTreeLatestVersion/'+treeId;

								xmlHttpTree.onreadystatechange = handleTreeVersion;

						

								xmlHttpTree.open("GET", url, true);

								xmlHttpTree.send(null);

							}

					  /*Added by Surbhi IV*/

					   }

					   else

					   {

						   jAlert("This leaf can not be edited because new version of this tree has been created.","Alert");

						   return false;

					   }

				  }

	});

	

}



function handleLockLeafEdit(){

	if(xmlHttp.readyState == 4) 

	{			

		if(xmlHttp.status == 200) 

		{									

			strResponseText = xmlHttp.responseText;				

			if(strResponseText == 0)

			{

				/* Fetching last version of leaf */



				xmlHttpLast=GetXmlHttpObject2();

				var url =baseUrl+'current_leaf'+"/index/leafId/"+leafId1;

				

					xmlHttpLast.onreadystatechange=function() {

						if (xmlHttpLast.readyState==4) {

							var arrNode = Array ();

							var nodeDetails = xmlHttpLast.responseText;

								if (nodeDetails != 0)
								{

									//alert(nodeDetails);

									arrNode = nodeDetails.split("~!@");
									//alert(arrNode[0]);
									
									if (!arrNode[0].match(/onlyContents/g))
									{

										leafId1=arrNode[1];

										leafId2=arrNode[1];

										//leafOrder1=arrNode[2];

										treeId1=arrNode[3];

										nodeId1=arrNode[0];

										document.getElementById('initialleafcontent'+leafOrder1).value=arrNode[4];

										 contents=arrNode[4];

									}

									else

									{

										

										//alert ('contents1= ' + arrNode[1]);

										document.getElementById('initialleafcontent'+leafOrder1).value=arrNode[1];

										contents=arrNode[1];

									}

									

								}

								

								var val=document.getElementById('initialleafcontent'+leafOrder1).value;

								document.getElementById('editleaf'+leafOrder1).style.display="";

								

								

								if( document.getElementById('editleaf'+leafOrder1))

								{

								  var objEditleaf = document.getElementById('editleaf'+leafOrder1);

							

											  while (objEditleaf.hasChildNodes()) {

															objEditleaf.removeChild(objEditleaf.lastChild);

														}

								}

								

								var editleafleafOrder1='editleaf'+leafOrder1;
								//alert (contents);
								editor_code(contents,'editorLeafContents'+leafOrder1+'1','editleaf'+leafOrder1);

								 const recordVal = "'doc'";

								//document.getElementById('editorLeafContents'+leafOrder1+'1sp').innerHTML='<table width="9%" border="0" align="left" cellpadding="2" cellspacing="0"><tr><td colspan="4" align="left"><a href="javascript:void(0)" onclick="editLeafSave('+leafId1+','+treeId1+','+leafOrder1+','+nodeId1+')"><input type="button" class="button01" value="Done" ></a><a href="javascript:void(0)" onclick="canceleditLeaf('+leafId1+','+treeId1+','+leafOrder1+')"><input type="button" class="button01" value="Cancel" ></a></td></tr></table><div id="audioRecordBox"><div style="float:left;margin-top:6px"><span id="drop"><a title="Record an audio" style="margin-left:0%;" onClick="startAudioRecord(3,'+leafOrder1+');"><span class="fa fa-microphone"></span></a></span></div><div id="3audio_record'+leafOrder1+'" style="display:none; margin-left:1%; margin-top:0.2%; float:left;"><button onClick="startRecording(this,'+recordVal+');">Record</button><button onClick="stopRecording(this);" disabled>Stop</button></div></div><div id="loaderImage"></div>';
								document.getElementById('editorLeafContents'+leafOrder1+'1sp').innerHTML='<div><a href="javascript:void(0)" onclick="editLeafSave('+leafId1+','+treeId1+','+leafOrder1+','+nodeId1+')"><input style="float:left;" type="button" class="button01" value="Done" ></a><a href="javascript:void(0)" onclick="canceleditLeaf('+leafId1+','+treeId1+','+leafOrder1+')"><input style="float:left;" type="button" class="button01" value="Cancel" ></a><span id="audioRecordBox"><div style="float:left;margin-top:5px; margin-left:1%;"><span id="drop"><a title="Record an audio" style="margin-left:0%;" onClick="startAudioRecord(3,'+leafOrder1+');"><span class="fa fa-microphone"></span></a></span></div><div id="3audio_record'+leafOrder1+'" style="display:none; margin-left:1%; margin-top:0%; float:left;"><button onClick="startRecording(this,'+recordVal+');">Record</button><button onClick="stopRecording(this);" disabled>Stop</button></div></span></div><div id="loaderImage"></div>';

								chnage_textarea_to_editor('editorLeafContents'+leafOrder1+'1');
								
								//alert(leafId1+'==='+leafId2);
								
								//Manoj: froala editor hide content on edit document leaf
								document.getElementById('docLeafContent'+leafId1).style.display="none";

								setValueIntoEditor('editorLeafContents'+leafOrder1+'1',contents);

								document.getElementById('editStatus').value = 1;

								

						}

					}

						

				xmlHttpLast.open("GET", url, true);

				xmlHttpLast.send(null);

				

				

				

				

			}else{	

				alert(strResponseText);	

				document.getElementById('editStatus').value = 0;

			}					

		}

	}

}



function editLeafSave(leafId, treeId,leafOrder,nodeId) 

{

	var editorId = "editorLeafContents"+leafOrder+"1";

	var getvalue = getvaluefromEditor(editorId);

	

	var INSTANCE_NAME = $("#editorLeafContents"+leafOrder1+"1").attr('name');

	

	if ($("<p>"+getvalue+"</p>").text().trim()=='' && getvalue.indexOf("<img")==-1)

	{

		jAlert ('Please enter text','Alert');

		return false;

	}

	var originalContents = encodeURIComponent(document.getElementById('initialleafcontent'+leafOrder).value).replace(/%0A/g,"");

	var str=encodeURIComponent(getvalue).replace(/%0A/g,"");

	

	if (originalContents==str)

	{

		jAlert('Contents not changed','Alert');

		return false;

	}

	else

	{

		var tagLinks=$("#tagLinks").val();

			

		$("[value=Done]").hide();

		$("[value=Cancel]").hide();

		$("#loaderImage").html("<div style='margin:15px 0px;'><br><img src='"+baseUrl+"/images/ajax-loader-add.gif'><br></div>");

		  var user_data='tagLinks='+tagLinks+"&workSpaceId="+workSpaceId+"&workSpaceType="+workSpaceType+"&curOption=edit&curLeafOrder="+leafOrder+"&treeId="+treeId+"&curNodeId="+nodeId+"&curLeaf="+leafId+"&curFocus=0&editStatus=1&curContent="+encodeURIComponent(getvalue);

			var request = $.ajax({

			  url: baseUrl+"edit_leaf_save/index/doc/exit",

			  type: "POST",

			  data: 'user_data='+user_data,

			  dataType: "html",

			  success:function(result)

			         {

						  if(result)

					     {

							 editorClose(editorId);

							$("#datacontainer").html(result);
							
							//Manoj: froala editor show content on edit document leaf
							document.getElementById('docLeafContent'+leafId).style.display="block";

							document.getElementById('editStatus').value=0;

						 }

					}

				});

		

	}

}



function handleTreeVersion(){

	if(xmlHttpTree.readyState == 4) 

	{			

		if(xmlHttpTree.status == 200) 

		{									

			isLatest = xmlHttpTree.responseText;

					

					if(isLatest==0)

					{

						jAlert ('This leaf can not be edited because new version of this tree has been created.','Alert');

						document.getElementById('editStatus').value = 0;	

						return false;

						

						

					}

					else

					{

						xmlHttp=GetXmlHttpObject2();

						var url =baseUrl+'lock_leaf'+"/index/leafId/"+leafId1;

						xmlHttp.onreadystatechange = handleLockLeafEdit;				

						xmlHttp.open("GET", url, true);

						xmlHttp.send(null);

					}



		}					

	}

}	

var self = this;

function handleTreeVersion1(getvalue,data,editorId){

									

	isLatest = data;

			//alert (isLatest);

			if(isLatest==0)

			{

				jAlert ('New Idea can not be created because new version of the tree has been created.','Alert');

				return false;

			}

			else

			{ 

				user_data='tagLinks='+document.getElementById("tagLinks").value+"&workSpaceId="+workSpaceId+"&workSpaceType="+workSpaceType+"&curOption=add&curLeafOrder="+leafOrder1+"&treeId="+document.getElementById("treeId").value+"&curNodeId="+document.getElementById("curNodeId").value+"&curLeaf="+leafId1+"&curFocus=0&editStatus=1&curContent="+encodeURIComponent(getvalue);

				

				$('#image').show();

				

				var request = $.ajax({

				url: baseUrl+"edit_leaf_save/index/doc/exit",

				type: "POST",

				data: 'user_data='+user_data,

				dataType: "html",

				async:false,

				success:function(result)

					 { 

					 	editorClose(editorId);

						if(result){

							document.getElementById('datacontainer').innerHTML=result;

							//(elem=document.getElementById("overlay")).parent.removeChild(elem);

						}

						else

						{

							document.getElementById('docErrorMsg').innerHTML="error";

							

						}

						editorCheck();

					 }

				});

				return true;

			}



}





function canceleditLeaf(leafId, treeId, leafOrder) 

{

	var editorLeafContentsleafOrder11='editorLeafContents'+leafOrder1+'1';

	var INSTANCE_NAME = $("#editorLeafContents"+leafOrder1+"1").attr('name');

	

	editorClose(INSTANCE_NAME);

	

	document.getElementById('editleaf'+leafOrder).style.display="none";
	
	//Manoj: froala editor show document leaf content on cancel
	
	document.getElementById('docLeafContent'+leafId).style.display="block";

	

	document.getElementById('editStatus').value= 0;		

	var url = baseUrl+'unlock_leaf';		  

	xmlHttp1=GetXmlHttpObject2();

	queryString =   url; 

	queryString = queryString + '/index/leafId/'+leafId;

	

	xmlHttp1.open("GET", queryString, true);

	xmlHttp1.send(null);	

}



	function hideall(leafOrder)

	{

		if (document.getElementById('allnodesOrders'))

		{

			var arrLeafIds = new Array();

			arrLeafIds = document.getElementById('allnodesOrders').value.split(',');

		

			//alert ('arrleafids' + arrLeafIds);

			for(var i=0;i<arrLeafIds.length;i++)

			{

				if (leafOrder!=arrLeafIds[i])

				{

					if (document.getElementById('leafOptions'+arrLeafIds[i]).style.display != 'none')

					{

						document.getElementById('leafOptions'+arrLeafIds[i]).style.display = 'none';

					}

				}

			}

		}	

		if (document.getElementById('leafAddFirst'))

		{

			document.getElementById('leafAddFirst').style.display="none";	

		}

	}

	

	

	

	

function showLeafOptions(leafId, leafOrder, treeId, nodeId)

{

	var seedId = 'normalViewTree'+treeId;	

	 

	if(document.getElementById('editStatus').value == 1)

	{

		jAlert('Please click Save & Exit or Close button before accessing new leaf','Alert');

		return false;

	}		

	leafId1 	= leafId;	

	nodeId1 	= nodeId;		

	treeId1 	= treeId;

	leafOrder1 	= leafOrder;

	 

	timeInit 	= -1;



	hideall(leafOrder);



	

	if (document.getElementById('leafOptions'+leafOrder).style.display == "none")

	{

		//alert ('Here1');

		document.getElementById('leafOptions'+leafOrder).style.display = "";

	}

	else

	{

		//alert ('Here2');

		document.getElementById('leafOptions'+leafOrder).style.display = "none";

	}



}

	function handleLockLeaf() 

	{		

		if(xmlHttp.readyState == 4) 

		{			

			if(xmlHttp.status == 200) 

			{									

				strResponseText = xmlHttp.responseText;				

										

				if(strResponseText == 0)

				{}

				else

				{	

					jAlert('This leaf is already in edit mode','Alert');					

				}					

			}

		}



	}

	// this is a js function used for show the leaf previous version contents

	function showLeafPrevious(leafId, leafParentId, version, curLeafId, leafOrder, treeId, workSpaceId, workSpaceType, bgcolor,nodeId) 

	{	

		nodeId1 = nodeId;

		nodeId_vk= leafId;

		curLeafId1 = curLeafId;

		curNodeOrder = leafOrder;

		spanTagLinkIconsId='spanTagLinkIcons'+leafOrder;

		

		var url = baseUrl+'view_leaf_previous_contents/index';  

		xmlHttp=GetXmlHttpObject2();

		queryString =   url; 

		queryString = queryString+'/?leafParentId='+leafParentId+'&leafId='+leafId+'&version='+version+'&curLeafId='+curLeafId+'&leafOrder='+leafOrder+'&treeId='+treeId+'&workSpaceId='+workSpaceId+'&workSpaceType='+workSpaceType+'&bgcolor='+bgcolor+'&nodeId='+nodeId;				

        xmlHttp.onreadystatechange = handleStateChange1;

		

		spanTagViewInnerId='spanTagViewInner'+leafOrder;	

		leafHeaderId = 'leafOptionsHeader'+leafOrder

		leafContentId = 'leafContent'+leafOrder;

		leafContentIdNew = 'leaf_contents'+nodeId;

		initialleafcontent='initialleafcontent'+leafOrder;

		spanTagNewId='spanTagNew'+leafOrder;

		spanTagViewLeafId='spanTagViewLeaf'+leafOrder;

		//alert (queryString);

		hiddenId = 'hiddenId'+curNodeOrder;

		xmlHttp.open("GET", queryString, false);

		xmlHttp.send(null);

	}

	var nodeId1 ;

// this is a js function used to show the leaf next version contents from the current version

	function showLeafNext(leafId, leafChildId, version, curLeafId, leafOrder, treeId, workSpaceId, workSpaceType,bgcolor,nodeId) 

	{

		curLeafId1 = curLeafId;	

		nodeId1=nodeId;

		nodeId_vk= leafId;

		curNodeOrder = leafOrder;

		spanTagLinkIconsId='spanTagLinkIcons'+leafOrder;

		//document.getElementById(spanTagLinkIconsId).style.display = 'none';

		var url = baseUrl+'view_leaf_next_contents/index';		

		xmlHttp=GetXmlHttpObject2();

		queryString =   url; 

		queryString = queryString+'/?leafChildId='+leafChildId+'&leafId='+leafId+'&version='+version+'&curLeafId='+curLeafId+'&leafOrder='+leafOrder+'&treeId='+treeId+'&workSpaceId='+workSpaceId+'&workSpaceType='+workSpaceType+'&bgcolor='+bgcolor+'&nodeId='+nodeId;			

		xmlHttp.onreadystatechange = handleStateChange1;

		leafHeaderId = 'leafOptionsHeader'+leafOrder

		leafContentId = 'leafContent'+leafOrder;

		leafContentIdNew = 'leaf_contents'+nodeId;

		initialleafcontent='initialleafcontent'+leafOrder;

		spanTagViewInnerId='spanTagViewInner'+leafOrder;

		spanTagViewLeafId='spanTagViewLeaf'+leafOrder;

		//alert (spanTagViewInnerId);

		spanTagNewId='spanTagNew'+leafOrder;



		hiddenId = 'hiddenId'+curNodeOrder;

		xmlHttp.open("GET", queryString, false);

		xmlHttp.send(null);

	}

	

	function handleStateChange1() 

	{

		if(xmlHttp.readyState == 4) 

		{

			if(xmlHttp.status == 200) 

			{					

				arrResponseText = new Array();

				//alert(xmlHttp.responseText);

				if(xmlHttp.responseText){

					arrResponseText = xmlHttp.responseText.split("|||");

					

					//alert(arrResponseText[11]+"author"+nodeId1);

					$("#ulNodesHeader"+nodeId1).html(arrResponseText[5]);

					//$("#normalView"+nodeId1).html(arrResponseText[7]);

					$("#editDocumentOption"+nodeId1).html(arrResponseText[6]);

					

					

					document.getElementById(leafHeaderId).innerHTML			= arrResponseText[0];

					document.getElementById(leafContentIdNew).innerHTML		= arrResponseText[1];

					document.getElementById("author"+nodeId1).innerHTML = arrResponseText[11];

				}

			}

		}

	}

	

	function saveDocument()

	{		

		//var getvalue1 = getvaluefromEditor('editorContents2');

		//var editorContents2='editorContents2';

		

		var documentTitle='documentTitle';

		

		//var getvalue2 = getvaluefromEditor('documentTitle');
		var getvalue2 = document.getElementById('documentTitle').value;
		

		//alert(getvalue1);

		//document.frmDocument.editorContents.value = getvalue1;		

		document.frmDocument.documentTitle.value = getvalue2;	

		var docTitle = document.getElementById('documentTitle').value;

		if(getvalue2.indexOf("<img")!=-1)

		{

			jAlert("Please do not use images in title","Alert");

			document.getElementById('documentName').focus();

			return false;

		}

		else if($("<p>"+getvalue2+"</p>").text().trim()=='')

		{

			jAlert("Please enter the title","Alert");

			document.getElementById('documentName').focus();

			return false;

		}

			

		document.frmDocument.submit();		

		return true;

	}

	

	function saveDocument2()

	{							

		var docTitle = document.getElementById('documentTitle').value;

	

		if(trim(docTitle) =="")

		{

			jAlert("Please enter the document title","Alert");

			document.getElementById('documentTitle').focus();

			return false;

		}		

		document.frmDocument.submit();		

		return true;	

	}

	function bodyUnload() 

	{

		var url = baseUrl+'unlock_leafs';		  

		xmlHttp1=GetXmlHttpObject2();

		queryString =   url; 		

		xmlHttp1.open("GET", queryString, true);

		xmlHttp1.send(null);	

		

	}

	function validateDocumentTitle()

	{

			//alert ('here');

		var getvalue = getvaluefromEditor('documentName');

		var documentName='documentName';

		

		if(getvalue == "")

		{

			jAlert("Please enter the document title","Alert");

			document.getElementById('documentName').focus();

			return false;

		}

		return true;

	}

	////////////////////// tags/////////////////

	function documentTreeOperations(object,operation,treeId)

	{
		if(document.getElementById('aMove'))
		{
	  		document.getElementById('aMove').className='';
		}
		
		if(document.getElementById('acreateVersion'))

		{

			document.getElementById('acreateVersion').className='';

		}

		if(document.getElementById('aexportFile'))

		{

			document.getElementById('aexportFile').className='';

		}
		
		/*Manoj: assign Contributors className start*/
		if(document.getElementById('aContributors'))

		{

			document.getElementById('aContributors').className='';

		}
		/*Manoj: assign Contributors className end*/

		

	   	object.className="hiLite";

	    if(operation=='move')

	  	{

		  document.getElementById('ulTreeOption').style.display='none';

		 

		  document.getElementById('spanMoveTree').style.display='block';

		}

		 

		else if(operation=='createVersion')

	 	{	

		    /*Added by Surbhi IV for checking version */

		    var request = $.ajax({

				  url: baseUrl+'lock_leaf/checkTreeLatestVersion/'+treeId,

				  type: "POST",

				  data: '',

				  dataType: "html",

				  success:function(result)

				  {

					   if(result>0)

					   {

					   		/*End of Added by Surbhi IV for checking version */

						   // window.open(baseUrl+'create_tree_version/index/'+treeId);
						   window.location = baseUrl+'create_tree_version/index/'+treeId;

							document.getElementById('ulTreeOption').style.display='none';

							document.getElementById('spanMoveTree').style.display='none';

					   		/*Added by Surbhi IV for checking version */

					   }

					   else

					   {

					        jAlert("You can not create new version of tree because new version of this tree has been created.","Alert");

							return false;

					   }

				  }

				});/*End of Added by Surbhi IV for checking version */

		}

		else if(operation=='exportFile')

		{

			

			//window.open(baseUrl+'create_xml_file/index/'+treeId);
			window.location = baseUrl+'create_xml_file/index/'+treeId;

			

		}
		
		/*Manoj: Contributors operation start*/
	   else if(operation=='contributors')

		 {

			 document.getElementById('ulTreeOption').style.display='none';

			 document.getElementById('divAutoNumbering').style.display='none';

			 document.getElementById('spanMoveTree').style.display='none';	

		 	 showPopWin(baseUrl+'comman/getDocCountributors/'+treeId+'/'+workSpaceId+'/type/'+workSpaceType,600, 350, null, '');

		 }
		/*Manoj: Contributors operation end*/

		 

		 

		 else

		 {

			 

		 	  document.getElementById('spanMoveTree').style.display='none';	

		 //return false;

		 }

	

	}

	

	function clickDocumentOptions(position)

	{ 

		nodeOptionsVisible=position;

		var notesId = 'normalView'+position;	

		$('.normalView').hide();

		$('.ulNodesHeader').hide();

		$('.clsDocNodeVersion').hide();

		

      	if(document.getElementById(notesId).style.display == "none")

	  	{

		  	document.getElementById(notesId).style.display = "block";

			document.getElementById("ulNodesHeader"+position).style.display = "block";

			document.getElementById("divDocNodeVersion"+position).style.display = "block";

			

		}

	  	else if(clickEvent!=position)

	  	{ 

		  	document.getElementById(notesId).style.display = "none";

			document.getElementById("ulNodesHeader"+position).style.display = "none";

			document.getElementById("divDocNodeVersion"+position).style.display = "none";

		}

	

	}

	

	function showDocumentNodeOptions(position)

	{	

		//alert(position+'==='+nodeOptionsVisible);

		/*if(nodeOptionsVisible!=position )

		{*/

			var notesId = 'normalView'+position;

			document.getElementById(notesId).style.display = "block";

			document.getElementById("ulNodesHeader"+position).style.display = "block";

			if(position)

			{

				document.getElementById("divDocNodeVersion"+position).style.display = "block";

			}

			clickEvent=position;

			

			

	  /* }*/

	}

	

	function hideDocumentNodeOptions(position)

	{	

		

		/*if(nodeOptionsVisible!=position)

		{*/

			var notesId = 'normalView'+position;	

			document.getElementById("ulNodesHeader"+position).style.display = "none";

			document.getElementById(notesId).style.display = "none";

			if(position){

			   document.getElementById("divDocNodeVersion"+position).style.display = "none";

			}

		/*}*/

	}
	
	function resetTaskSearchForm($form) { 
		 
		$form.find('select[name="originator"]').val("0");
		$form.find('select[name="assigned_to"]').val("0");
		$form.find('select[name="taskSort"]').val("3");
		$form.find('input:text, input:password, input:file, textarea').val('');
		$form.find('input:radio, input:checkbox').removeAttr('checked').removeAttr('selected');
		document.getElementById("taskSearchResults").style.display = "none";
	}



var filterOpt = 0;

ajaxData='';

$(document).ready(function(){

	$(document).delegate('.tagm','click',function(){

		url = $(this).attr('href');
		
		//alert (url);

		tagName = $(this).text();

		if($(this).hasClass("userTag")){

			

			rm = $(this).attr("remUsr");

			

			if(rm==0){

				$(".userTag").removeClass("highlight");

				$(".userTag").attr("rem",0);

				$(".userTag > img").remove();

				

				$(this).replaceWith("<a href='"+url+"' class='blue-link-underline userTag highlight tagm' remUsr='1'>"+tagName+"<img src='"+baseUrl+"/images/del_black.png' style='vertical-align:middle;margin:2px;' ></a>");

				//url = url+"?ajax=1";
				if (url.indexOf("treeId")==-1)
				{
					url = url+"?ajax=1";
				}
				else
				{
					url = url+"&ajax=1";
				}				

			}

			else{

				$(this).replaceWith("<a href='"+url+"' class='blue-link-underline userTag tagm' remUsr='0'>"+tagName+"</a>");

				//url = url+"?ajax=1&remUsr="+rm;
				if (url.indexOf("treeId")==-1)
				{
					url = url+"?ajax=1&remUsr="+rm;
				}
				else
				{
					url = url+"&ajax=1&remUsr="+rm;
				}

			}

		}

		else{

			rm = $(this).attr("rem");

			//below is the code for removing user tags when selecting any other tag(uncomment if necessary)

			/*$(".userTag").removeClass("highlight");

			$(".userTag").attr("remUsr",0);

			$(".userTag > img").remove();*/

			if(rm==0){

				$(this).replaceWith("<a href='"+url+"' class='blue-link-underline highlight tagm' rem='1'>"+tagName+"<img src='"+baseUrl+"/images/del_black.png' style='vertical-align:middle;margin:2px;'></a>");
				
				//url = url+"?ajax=1";
				if (url.indexOf("treeId")==-1)
				{
					url = url+"?ajax=1";
				}
				else
				{
					url = url+"&ajax=1";
				}
			}

			else{

				$(this).replaceWith("<a href='"+url+"' class='blue-link-underline tagm' rem='0'>"+tagName+"</a>");

				//url = url+"?ajax=1&rem="+rm;
				if (url.indexOf("treeId")==-1)
				{
					url = url+"?ajax=1&rem="+rm;
				}
				else
				{
					url = url+"&ajax=1&rem="+rm;
				}

			}

		}

		$.post(url,{},function(data){

			ajaxData = data;

		});

		return false;

		});

		$(document).delegate('#go','click',function(){
			$("#leaves").html(ajaxData);

		});

		$(document).delegate('#clear','click',function(){

			$(".highlight").click();

			ajaxData = "";

			$("#leaves").html("");

		});

	

	});

//Manoj: code for start and stop audio record

function startAudioRecord(type,leafOrder)
 {
	//Manoj: Code to check audio record device
	 try {
     
      window.AudioContext = window.AudioContext || window.webkitAudioContext;
      navigator.getUserMedia = ( navigator.getUserMedia ||
                       navigator.webkitGetUserMedia ||
                       navigator.mozGetUserMedia ||
                       navigator.msGetUserMedia);
      window.URL = window.URL || window.webkitURL;

      audio_context = new AudioContext;
      //__log('Audio context set up.');
     // __log('navigator.getUserMedia ' + (navigator.getUserMedia ? 'available.' : 'not present!'));
    } catch (e) {
      //alert('No web audio support in this browser!');
    }
	
    navigator.getUserMedia({audio: true}, startUserMedia, function(e) {
     // __log('No live audio input: ' + e);
	 $("#"+type+"audio_record"+leafOrder).hide();
	 alert("No audio device found!");
	});
	
	
	if($("#"+type+"audio_record"+leafOrder).is(":visible"))
	{
  		$("#"+type+"audio_record"+leafOrder).hide();
	}
	else
	{
		$("#"+type+"audio_record"+leafOrder).show();
	}
	
	//Manoj: Code end 
	 
	}

  var audio_context;
  var recorder;

  function startUserMedia(stream) {
    var input = audio_context.createMediaStreamSource(stream);
   // __log('Media stream created.' );
	//__log("input sample rate " +input.context.sampleRate);

    // Feedback!
    //input.connect(audio_context.destination);
   // __log('Input connected to audio context destination.');

    recorder = new Recorder(input, {
                  numChannels: 1
                });
   // __log('Recorder initialised.');
  }

  function startRecording(button,leafTreeId) {
	//alert(leafTreeId);
	window.value=leafTreeId;  
    recorder && recorder.record();
    button.disabled = true;
    button.nextElementSibling.disabled = false;
	var y =button.parentElement;
	var x = document.createElement("div");
	x.setAttribute("class", "audioRecordLoad");
    //x.setAttribute("type", "button");
    //x.setAttribute("value", "Click me");
    y.appendChild(x);
	// __log('Recording...');
   
  }

  function stopRecording(button) {
    recorder && recorder.stop();
    button.disabled = true;
    button.previousElementSibling.disabled = false;
    //__log('Stopped recording.');
	$('.audioRecordLoad').hide();
    // create WAV download link using audio data blob
    createDownloadLink();

    recorder.clear();
  }

  function createDownloadLink() {
    recorder && recorder.exportWAV(function(blob) {
     
    });
  }

//Manoj: code end

//Manoj: Talk chat box code start

$(document).ready(function(){
	$("#container").append('<div id="mainTalkBox"><div class="otherarea"></div></div>');						   
});
function closeTalkChat(leafTreeId)
{
	
	if($(".talk"+leafTreeId).is(":visible"))
	{
		$(".talk"+leafTreeId).remove();	
	}
	
}
function hideTalkChat(leafTreeId)
{
	
	if($(".talk_content"+leafTreeId).is(":visible"))
	{
		$(".talk_content"+leafTreeId).hide();	
		$(".talk_chat_size"+leafTreeId).html('<i class="fa fa-window-maximize" aria-hidden="true"></i>&nbsp;&nbsp;');
		$("#tooltiptext"+leafTreeId).removeClass('tooltiptext').addClass('tooltiptextBottom');
		
	}
	else
	{
		$(".talk_content"+leafTreeId).show();
		$(".talk_chat_size"+leafTreeId).html('<b>_ </b>&nbsp;&nbsp;');
		$("#tooltiptext"+leafTreeId).removeClass('tooltiptextBottom').addClass('tooltiptext');
	}
}

function talkOpen(leafTreeId,workSpaceId,workSpaceType,treeId,talkTitle,talkseed,talkhtmlTitle)
{
	 
	 var str = talkhtmlTitle.replace(/<{1}[^<>]{1,}>{1}/g," ");
	 var talkShortTitle;
	 if(str.length > 25)
	 {
	 	talkShortTitle = (str.substring(0, 25))+'...'; 
	 }
	 else
	 {
		talkShortTitle = str;
	 }
	 //return false;
	
	if($(".talk"+leafTreeId).length == 0)
	{
		var talkBoxCount = $('.abs').length;
		//alert(talkBoxCount);
		if(talkBoxCount>4)
		{
			alert('You already have 5 talk windows open. Please close one to open a new window.');
			return false;
		}	
		var urlLink;
		if(talkseed=='1')
		{
		 	urlLink = baseUrl+"view_talk_tree/node/"+leafTreeId+"/"+workSpaceId+"/type/"+workSpaceType+"/ptid/"+treeId+"/"+talkseed;
		}
		else
		{
			urlLink = baseUrl+"view_talk_tree/node/"+leafTreeId+"/"+workSpaceId+"/type/"+workSpaceType+"/ptid/"+treeId;
		}
	$.ajax({

		  type: 'POST',
			
		  url: urlLink,
		  
		  success: function(data){
			  
			 // alert(data);
			 
			 $('.otherarea').append('<div class="talk'+leafTreeId+' abs"><div class="abs_head talk_head'+leafTreeId+'"><span class="shortTitle"><img src="'+baseUrl+'images/talk.gif" alt="Talk" border=0 ><b>'+talkShortTitle+'</b><span class="tooltip"><span id="tooltiptext'+leafTreeId+'" class="tooltiptext">'+talkhtmlTitle+'</span></span></span><span class="talk_chat_close" onclick="closeTalkChat('+leafTreeId+')"><b>x </b>&nbsp;</span><span class="talk_chat_close talk_chat_size'+leafTreeId+'" onclick="hideTalkChat('+leafTreeId+')"><b>_ </b>&nbsp;&nbsp;</span></div><div class="abs_content talk_content'+leafTreeId+'">'+data+'</div></div>');
			
			},

		});
	}
	else
	{
		$(".talk_content"+leafTreeId).show();
		$(".talk_chat_size"+leafTreeId).html('<b>_ </b>&nbsp;&nbsp;');
		$("#tooltiptext"+leafTreeId).removeClass('tooltiptextBottom').addClass('tooltiptext');
	}
	//setInterval("testing("+leafTreeId+","+workSpaceId+","+workSpaceType+","+treeId+")",5000);
}

//Manoj: code end